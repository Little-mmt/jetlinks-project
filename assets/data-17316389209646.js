import{h as e}from"./index-1731638920964.js";const s=new Map;s.set("websocket-server","WebSocket");s.set("http-server-gateway","HTTP");s.set("udp-device-gateway","UDP");s.set("coap-server-gateway","CoAP");s.set("mqtt-client-gateway","MQTT");s.set("mqtt-server-gateway","MQTT");s.set("tcp-server-gateway","TCP");s.set("child-device","");s.set("OneNet","HTTP");s.set("OneNet-platform","HTTP");s.set("Ctwing","HTTP");s.set("modbus-tcp","MODBUS_TCP");s.set("opc-ua","OPC_UA");s.set("edge-child-device","EdgeGateway");s.set("collector-gateway","collector-gateway");s.set("official-edge-gateway","MQTT");const a=new Map;a.set("websocket-server","WEB_SOCKET_SERVER");a.set("http-server-gateway","HTTP_SERVER");a.set("udp-device-gateway","UDP");a.set("coap-server-gateway","COAP_SERVER");a.set("mqtt-client-gateway","MQTT_CLIENT");a.set("mqtt-server-gateway","MQTT_SERVER");a.set("tcp-server-gateway","TCP_SERVER");a.set("official-edge-gateway","MQTT_SERVER");const t=new Map;t.set("mqtt-server-gateway",e("/access/mqtt.png"));t.set("websocket-server",e("/access/websocket.png"));t.set("modbus-tcp",e("/access/modbus.png"));t.set("coap-server-gateway",e("/access/coap.png"));t.set("tcp-server-gateway",e("/access/tcp.png"));t.set("Ctwing",e("/access/ctwing.png"));t.set("plugin_gateway",e("/access/plugin.png"));t.set("child-device",e("/access/child-device.png"));t.set("opc-ua",e("/access/opc-ua.png"));t.set("http-server-gateway",e("/access/http.png"));t.set("fixed-media",e("/access/video-device.png"));t.set("udp-device-gateway",e("/access/udp.png"));t.set("OneNet",e("/access/onenet.png"));t.set("OneNet-platform",e("/access/onenet.png"));t.set("gb28181-2016",e("/access/gb28181.png"));t.set("mqtt-client-gateway",e("/access/mqtt-broke.png"));t.set("edge-child-device",e("/access/child-device.png"));t.set("official-edge-gateway",e("/access/edge.png"));t.set("collector-gateway",e("/access/collector-gateway.png"));t.set("onvif",e("/access/onvif.png"));t.set("media-plugin",e("/access/media-plugin.png"));const p={"udp-device-gateway":"UDP可以让设备无需建立连接就可以与平台传输数据。在允许一定程度丢包的情况下，提供轻量化且简单的连接。","tcp-server-gateway":"TCP服务是一种面向连接的、可靠的、基于字节流的传输层通信协议。设备可通过TCP服务与平台进行长链接，实时更新状态并发送消息。可自定义多种粘拆包规则，处理传输过程中可能发生的粘拆包问题。","websocket-server":"WebSocket是一种在单个TCP连接上进行全双工通信的协议，允许服务端主动向客户端推送数据。设备通过WebSocket服务与平台进行长链接，实时更新状态并发送消息，且可以发布订阅消息","mqtt-client-gateway":"MQTT是ISO 标准下基于发布/订阅范式的消息协议，具有轻量、简单、开放和易于实现的特点。平台使用指定的ID接入其他远程平台，订阅消息。也可添加用户名和密码校验。可设置最大消息长度。可统一设置共享的订阅前缀。","http-server-gateway":"HTTP服务是一个简单的请求-响应的基于TCP的无状态协议。设备通过HTTP服务与平台进行灵活的短链接通信，仅支持设备和平台之间单对单的请求-响应模式","mqtt-server-gateway":"MQTT是ISO 标准下基于发布/订阅范式的消息协议，具有轻量、简单、开放和易于实现的特点。提供MQTT的服务端，以供设备以长链接的方式接入平台。设备使用唯一的ID，也可添加用户名和密码校验。可设置最大消息长度。","coap-server-gateway":"CoAP是针对只有少量的内存空间和有限的计算能力提供的一种基于UDP的协议。便于低功耗或网络受限的设备与平台通信，仅支持设备和平台之间单对单的请求-响应模式。"},i=[{title:"topic",dataIndex:"topic",key:"topic",ellipsis:!0},{title:"上下行",dataIndex:"stream",key:"stream",ellipsis:!0,align:"center",width:100,scopedSlots:{customRender:"stream"}},{title:"说明",dataIndex:"description",key:"description",ellipsis:!0}],g=[{title:"地址",dataIndex:"address",key:"address",ellipsis:!0},{title:"示例",dataIndex:"example",key:"example",ellipsis:!0},{title:"说明",dataIndex:"description",key:"description",ellipsis:!0}];export{t as B,i as C,a as N,s as P,g as a,p as d};

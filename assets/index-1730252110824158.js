import{dg as q}from"./index-1730252110824.js";import"./index-1730252110824281.js";import{c as S}from"./cascade-1730252110824.js";import{k as i,e as z,o as B,U,V as k,u as g,G as w,d as $}from"./vue-1730252110824.js";const A=$({name:"ChannelTree"}),V=Object.assign(A,{props:{height:{type:Number,default:500},id:{type:String,default:void 0},deviceId:{type:String,default:void 0},channelId:{type:String,default:void 0},type:{type:String,default:"bind"}},emits:["update:channelId","update:deviceId","select","load"],setup(I,{expose:b,emit:s}){const h=I,o=i([]),u=i([]),d=i([]);i([]);const K=i({}),f=i([]),y=z(()=>h.type==="bind"),C=a=>a.filter(e=>e.catalogType.value!=="device"),m=(a,e,n=!1,t=[],c=[])=>new Promise(async p=>{y.value&&(e.terms.push({column:"id$media-record-schedule-bind-channel",value:[{column:"scheduleId",termType:"eq",value:h.id}]}),f.value.length&&e.terms.push({column:"id",termType:"in",value:f.value.toString()}));const v=await S.queryChannelList(e);if(v.success){const{total:j,pageIndex:N,pageSize:O}=v.result,r=C(v.result.data).map(l=>({...l,class:l.status.value,isLeaf:!1,paths:[...t,l.id],channelCatalog:[...c,l.name]}));if(d.value=x(d.value,a,r),j>(N+1)*O&&setTimeout(()=>{m(a,{...e,pageIndex:e.pageIndex+1},t,c)},50),n){let l=r.length?r[0]:d.value[0];o.value.push(d.value[0].id),u.value=[r.length?r[0].id:a],s("update:deviceId",u.value[0]),s("select",{dId:l.deviceId,cId:l.channelId,node:l})}p(v.result)}}),D=a=>{if(K.value=a,Object.keys(a||{}).length){const e=new Set(Object.values(a).reduce((n,t)=>(n.push(...t.paths),n),[]));return f.value=[...e.values()],{column:"id",termType:"in",value:Object.keys(a).toString(),type:"or"}}return null},T=async a=>{const e=[{column:"id$media-record-schedule-bind-device",value:[{column:"scheduleId",termType:"eq",value:h.id}]}],n=D(a);n&&e.push(n);const t=await S.getMediaTree({paging:!1,sorts:[{name:"createTime",order:"desc"}],terms:y.value?e:[]});t.success&&(s("load",t.result),d.value=t.result.map(c=>{const p={};return p.isLeaf=!1,{...c,...p,paths:[c.id],channelCatalog:[c.name]}}),d.value.length>0&&d.value[0]&&await m(d.value[0].id,{pageIndex:0,pageSize:100,terms:[{column:"deviceId",value:d.value[0].id}]},!0,[d.value[0].id],d.value[0].channelCatalog))},L=(a,{node:e})=>{u.value=[e.id],s("update:deviceId",e.id),s("update:channelId",e.channelId),s("select",{dId:e.deviceId,cId:e.channelId,node:e})},x=(a,e,n)=>a.map(t=>t.id===e?{...t,children:t.children?[...t.children,...n]:n}:t.children?{...t,children:x(t.children,e,n)}:t),_=({key:a,children:e,path:n})=>new Promise(async t=>{if(e){t();return}await m(a,{pageIndex:0,pageSize:100,terms:[{column:"deviceId",value:a}]},n),t()});return B(()=>{T()}),b({getDeviceList:T}),(a,e)=>{const n=q;return U(),k(n,{height:I.height,"show-line":{showLeafIcon:!1},"show-icon":!0,"tree-data":g(d),loadData:_,fieldNames:{title:"name",key:"id"},expandedKeys:g(o),"onUpdate:expandedKeys":e[0]||(e[0]=t=>w(o)?o.value=t:null),selectedKeys:g(u),"onUpdate:selectedKeys":e[1]||(e[1]=t=>w(u)?u.value=t:null),onSelect:L},null,8,["height","tree-data","expandedKeys","selectedKeys"])}}});export{V as default};

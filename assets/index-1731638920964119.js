import{h as f,o as F,$ as z,I as V,v as A,a0 as B,aD as O,a6 as Z,a7 as L,a1 as $,F as G,aa as W,g as X}from"./index-1731638920964.js";import{h as K,i as Y,j as ee,k as te,l as ae,m as se,n as oe,o as le,p as ne}from"./initHome-1731638920964.js";import{t as re}from"./validate-1731638920964.js";import{d as ie,k as w,r as j,H as ce,ab as ue,U as M,Z as N,_ as l,u as t,f as s,X as a,E as I,F as Q,a1 as de,V as pe,$ as _e,W as me,G as ve,af as fe,ag as ge}from"./vue-1731638920964.js";import"./regular-1731638920964.js";const k=y=>(fe("data-v-35b729a3"),y=y(),ge(),y),be=["src"],he={class:"data-content"},ye={class:"data-p-style"},Te={style:{"margin-top":"20px"}},Pe=k(()=>l("span",null,"本地地址 ",-1)),we=["src"],ke=k(()=>l("span",null,"公网地址 ",-1)),Ce=["src"],xe=k(()=>l("span",null,"本地端口 ",-1)),Me=["src"],je=k(()=>l("span",null,"公网端口 ",-1)),Ne=["src"],Ie=ie({__name:"index",setup(y,{expose:S}){const T=w(),g=w(!1),b=w(!1),n=j({host:"0.0.0.0"}),R=new RegExp(/^[a-zA-Z0-9]+([\-\.]{1}[a-zA-Z0-9]+)*\.[a-zA-Z]{2,}$/),D=w({host:[{required:!0,message:"请选择本地地址"}],port:[{required:!0,message:"请选择本地端口"}],publicHost:[{required:!0,validator:async(r,e)=>e?!re(e)&&!R.test(e)?Promise.reject("请输入正确的公网地址"):Promise.resolve():Promise.reject("请输入公网地址"),trigger:"change"}],publicPort:[{required:!0,validator:async(r,e)=>e?Number(e)<1||Number(e)>65535?Promise.reject("请输入1~65535的正整数"):Promise.resolve():Promise.reject("请输入公网端口"),trigger:"change"}]}),U=()=>{g.value?g.value=!1:b.value=!0},E=()=>{T.value.resetFields()},C=j({isSucessInit:0,optionPorts:[],getCurrentPort:async()=>{var c;const r=await K(),p=((c=(r==null?void 0:r.result).find(u=>u.host==="0.0.0.0"))==null?void 0:c.ports.TCP)||[];C.optionPorts=p==null?void 0:p.map(u=>({label:u,value:u}))}}),H=()=>new Promise(async r=>{if(!g.value)return r(!0);T.value.validate().then(async()=>{var e,p,c,u,_;try{const m=await Y({type:"MQTT_SERVER",shareCluster:!0,name:"MQTT网络组件",configuration:{host:"0.0.0.0",secure:!1,port:n.port,publicHost:n.publicHost,publicPort:n.publicPort,maxMessageSize:8192}}),x=await ee();let i;if(x.status===200){const v=await te();v.status===200&&(i=((v==null?void 0:v.result)||[]).find(o=>o.name==="JetLinks官方协议"))}const P=await ae({name:"MQTT类型设备接入网关",provider:"mqtt-server-gateway",protocol:i==null?void 0:i.id,transport:"MQTT",channel:"network",channelId:(e=m==null?void 0:m.result)==null?void 0:e.id}),d=await se({name:"MQTT产品",messageProtocol:i==null?void 0:i.id,protocolName:i==null?void 0:i.name,transportProtocol:"MQTT",deviceType:"device",accessId:(p=P.result)==null?void 0:p.id,accessName:(c=P.result)==null?void 0:c.name,accessProvider:"mqtt-server-gateway"}),h=await oe({name:"MQTT设备",productId:(u=d==null?void 0:d.result)==null?void 0:u.id,productName:(_=d==null?void 0:d.result)==null?void 0:_.name});h.status===200&&(await le(d.result.id),await ne(h.result.id)),r(h.status==200)}catch{r(!1)}}).catch(()=>{r(!1)})}),{optionPorts:J,isSucessInit:Re}=ce(C),q=()=>{T.value.validate().then(()=>{F("保存成功"),g.value=!0,b.value=!1})};return C.getCurrentPort(),S({save:H}),(r,e)=>{const p=ue("ExclamationCircleOutlined"),c=z,u=V,_=A,m=B,x=O,i=Z,P=L,d=$,h=G,v=W;return M(),N(Q,null,[l("div",null,[l("img",{class:"init-data-img",onClick:U,src:t(g)?t(f)("/init-home/data-enabled.png"):t(f)("/init-home/data-disabled.png")},null,8,be)]),s(v,me({visible:t(b),"onUpdate:visible":e[4]||(e[4]=o=>ve(b)?b.value=o:null),title:"初始数据",width:"52vw",maskClosable:!1,onCancel:E,onOk:q,okText:"确定",cancelText:"取消",class:"modal-style"},r.layout),{default:a(()=>[l("div",he,[l("p",ye,[s(p,{style:{margin:"0 0 0 5px"}}),I(" 初始化数据包括MQTT产品、MQTT设备、MQTT类型设备接入网关、MQTT网络组件、Jetlinks 官方协议 ")])]),l("div",Te,[s(h,{layout:"vertical",model:t(n),ref_key:"formRef",ref:T,rules:t(D)},{default:a(()=>[s(d,{span:24,gutter:24},{default:a(()=>[s(m,{span:12},{default:a(()=>[s(_,{name:"host"},{label:a(()=>[Pe,s(c,{title:"绑定到服务器上的网卡地址,绑定到所有网卡:0.0.0.0"},{default:a(()=>[l("img",{class:"img-style",src:t(f)("/init-home/mark.png")},null,8,we)]),_:1})]),default:a(()=>[s(u,{value:t(n).host,"onUpdate:value":e[0]||(e[0]=o=>t(n).host=o),disabled:!0},null,8,["value"])]),_:1}),s(_,{name:"publicHost"},{label:a(()=>[ke,s(c,{title:"对外提供访问的地址内网环境时填写服务器的内网IP地址"},{default:a(()=>[l("img",{class:"img-style",src:t(f)("/init-home/mark.png")},null,8,Ce)]),_:1})]),default:a(()=>[s(u,{value:t(n).publicHost,"onUpdate:value":e[1]||(e[1]=o=>t(n).publicHost=o),placeholder:"请输入公网地址"},null,8,["value"])]),_:1})]),_:1}),s(m,{span:12},{default:a(()=>[s(_,{name:"port"},{label:a(()=>[xe,s(c,{title:"监听指定端口的请求"},{default:a(()=>[l("img",{class:"img-style",src:t(f)("/init-home/mark.png")},null,8,Me)]),_:1})]),default:a(()=>[s(i,{value:t(n).port,"onUpdate:value":e[2]||(e[2]=o=>t(n).port=o),placeholder:"请选择本地端口","show-search":""},{default:a(()=>[(M(!0),N(Q,null,de(t(J),o=>(M(),pe(x,{key:o,value:o.value,label:o.label},{default:a(()=>[I(_e(o.label),1)]),_:2},1032,["value","label"]))),128))]),_:1},8,["value"])]),_:1}),s(_,{name:"publicPort"},{label:a(()=>[je,s(c,{title:"对外提供访问的端口"},{default:a(()=>[l("img",{class:"img-style",src:t(f)("/init-home/mark.png")},null,8,Ne)]),_:1})]),default:a(()=>[s(P,{value:t(n).publicPort,"onUpdate:value":e[3]||(e[3]=o=>t(n).publicPort=o),placeholder:"请输入公网端口",style:{width:"100%"},precision:0},null,8,["value"])]),_:1})]),_:1})]),_:1})]),_:1},8,["model","rules"])])]),_:1},16,["visible"])],64)}}});const qe=X(Ie,[["__scopeId","data-v-35b729a3"]]);export{qe as default};
